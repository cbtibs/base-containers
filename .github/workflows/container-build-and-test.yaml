name: Container Build and Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  discover-dockerfiles:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.scan.outputs.folders }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Find Dockerfiles
        id: scan
        run: |
          # Look for all subdirectories at the root that contain a Dockerfile
          # 'find' will return a list like "./folder1" "./folder2"
          FOLDERS=$(find . -mindepth 1 -maxdepth 1 -type d -exec test -e "{}/Dockerfile" \; -print | sed 's|^\./||')
          
          # Convert space-separated folder list to a JSON array using 'jq'
          JSON_ARRAY=$(echo "$FOLDERS" | jq -R -s 'split(" ")')
          
          # Output that JSON array to the next job
          echo "folders=$JSON_ARRAY" >> $GITHUB_OUTPUT

  build-test-and-push:
    runs-on: ubuntu-latest
    needs: discover-dockerfiles

    strategy:
      fail-fast: false
      matrix:
        container-folder: ${{ fromJson(needs.discover-dockerfiles.outputs.matrix) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract Short Commit SHA
        id: get_sha
        run: echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.container-folder }}
          file: ${{ matrix.container-folder }}/Dockerfile
          push: false
          load: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ env.SHORT_SHA }}-${{ matrix.container-folder }}
            ghcr.io/${{ github.repository }}:latest-${{ matrix.container-folder }}
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
          cache-from: |
            type=registry,ref=ghcr.io/${{ github.repository }}:cache,mode=max
          cache-to: |
            type=registry,ref=ghcr.io/${{ github.repository }}:cache,mode=max

      - name: Install Container Structure Test
        run: |
          wget https://github.com/GoogleContainerTools/container-structure-test/releases/download/v1.15.0/container-structure-test-linux-amd64
          chmod +x container-structure-test-linux-amd64
          sudo mv container-structure-test-linux-amd64 /usr/local/bin/container-structure-test

      - name: Run Container Structure Tests
        run: |
          container-structure-test test \
            --image ghcr.io/${{ github.repository }}:latest-${{ matrix.container-folder }} \
            --config tests/container/container-structure-tests.yaml

      - name: Push Docker Image
        uses: docker/build-push-action@v5
        if: github.ref == 'refs/heads/main' && success()
        with:
          context: ${{ matrix.container-folder }}
          file: ${{ matrix.container-folder }}/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ env.SHORT_SHA }}-${{ matrix.container-folder }}
            ghcr.io/${{ github.repository }}:latest-${{ matrix.container-folder }}
          cache-from: |
            type=registry,ref=ghcr.io/${{ github.repository }}:cache,mode=max
          cache-to: |
            type=registry,ref=ghcr.io/${{ github.repository }}:cache,mode=max
